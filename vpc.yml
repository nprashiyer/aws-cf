AWSTemplateFormatVersion: 2010-09-09
Description: "Created by Prashant using CloudFormation"

Resources: 
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      Tags:
        - Key: Env
          Value: Prod
  
  pvtsbt01:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      
      VpcId: 
        Ref:  myVPC
      CidrBlock: 10.0.0.0/24
      Tags:
        - Key: Type
          Value: Private

  pubsbt01:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true

      VpcId:
        Ref:  myVPC
      CidrBlock: 10.0.1.0/24
      Tags:
        - Key: Type
          Value: Public

# Create Internet Gateway 
  igwName:
    Type: AWS::EC2::InternetGateway


  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: 
        Ref: myVPC
      InternetGatewayId: 
        Ref: igwName

# Create RT for public subnet and associate with public subnet
  publicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: myVPC

  publicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: publicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: igwName


  routeTableAssocName:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: pubsbt01
      RouteTableId:
        Ref: publicRouteTable


# Secuorty Groups for Public & Private vm
  pubsecgrp:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: For allowing SSH, RDP & HTTP
      GroupDescription: 
      VpcId: !Ref myVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  pvtsecgrp:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: For allowing SSH from VM inside public
      GroupDescription: 
      VpcId: !Ref myVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.0.1.0/24
